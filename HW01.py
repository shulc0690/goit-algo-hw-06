import networkx as nx
import matplotlib.pyplot as plt

# Створюємо обьєкт графа
G = nx.Graph()

# Додаємо вершини представленні як різні локації в місті
nodes = ["A", "B", "C", "D", "E", "F"]
G.add_nodes_from(nodes)

# Додаємо ребра представленні як шляхи між нашими локаціями
edges = [
    ("A", "B"),
    ("A", "C"),
    ("B", "C"),
    ("B", "D"),
    ("C", "D"),
    ("C", "E"),
    ("D", "E"),
    ("E", "F"),
]
G.add_edges_from(edges)

# Друкуємо граф
nx.draw(
    G,
    with_labels=True,
    node_color="skyblue",
    node_size=2000,
    font_size=15,
    font_color="black",
    edge_color="gray",
)
plt.show()

# Аналізуємо базові характеристика графа
num_nodes = G.number_of_nodes()
num_edges = G.number_of_edges()
degree = dict(G.degree())

print(f"Кількість вершин: {num_nodes}")
print(f"Кількість ребер: {num_edges}")
print(f"Ступінь вершин: {degree}")


# 1. Кількість вершин (Nodes): Кількість вершин представляє різні локації в місті. У нашому графі 6 вершин: A, B, C, D, E та F.
# 2. Кількість ребер (Edges): Кількість ребер представляє зв'язки між цими локаціями. У нашому графі 8 ребер, які з'єднують вершини: ('A', 'B'), ('A', 'C'), ('B', 'C'), ('B', 'D'), ('C', 'D'), ('C', 'E'), ('D', 'E') та ('E', 'F').
# 3. Ступінь вершин (Degree of Nodes): Ступінь вершини - це кількість з'єднань, які вона має з іншими вершинами. Ось ступені для кожної вершини в нашому графі:
# Вершина A: 2
# Вершина B: 3
# Вершина C: 4
# Вершина D: 3
# Вершина E: 3
# Вершина F: 1
